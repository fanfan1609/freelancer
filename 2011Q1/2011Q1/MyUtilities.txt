import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

public class MyUtilities 
{
	private static MyUtilities instance;
	
	private File dataFile;
	
	private MyUtilities()
	{
		try
		{
			dataFile = new File("C:\\temp\\clubdata.txt");
			//Check if the file already exists on disk. If not then create it.
			if(!dataFile.exists())
			{
				dataFile.createNewFile();
			}
		}
		catch(IOException ioex)
		{
			System.out.println(ioex.getMessage());
		}
		
	}
	
	
	public static MyUtilities getInstance()
	{
		//instance will only be null the first time this method is called.
		if(instance == null)
		{
			instance = new MyUtilities();
		}
		
		//thereafter we just keep returning the one and only instance created.
		return instance;
	}
	
	public void saveFile(Club myClub)
	{
		try
		{
			FileOutputStream fileStream = new FileOutputStream(dataFile);
			
			ObjectOutputStream oos = new ObjectOutputStream(fileStream);
			
			oos.writeObject(myClub);
			
			oos.close();
			fileStream.close();
		}
		
		catch(FileNotFoundException fnfe)
		{
			System.out.println(fnfe.getMessage());
		}
		
		catch(IOException ioex)
		{
			System.out.println(ioex.getMessage());
		}
	}
	
	public Club loadFile()
	{
		//Declare variables outside the try
		FileInputStream fileStream = null;
		ObjectInputStream ois = null;
		Club objFromFile = null;
		try
		{
			fileStream = new FileInputStream(dataFile);
			ois = new ObjectInputStream(fileStream);
			
			objFromFile = (Club)ois.readObject();

			
		}
		//Catch all!! (Will catch any exception that happens)
		catch(Exception ex)
		{
			System.out.println(ex.getMessage());
		}
		//finally will ALWAYS be executed no matter what happens in the try-catch above.
		finally
		{
			try
			{
				fileStream.close();
				ois.close();
			}
			catch(Exception ex)
			{
				System.out.println(ex.getMessage());
			}
			return objFromFile;
		}
		
	}
	
	
	
	
}
